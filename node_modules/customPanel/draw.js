export function drawPanel(tabs) {

    var inputs = [];
    var counter = 0;

    var panelNode = '<div class="bpp-properties">';
    panelNode += '<div class="bpp-properties-header">' +
        '<div class="label" data-label-id></div>' +
        '<div class="search">' +
        '<input type="search" placeholder="Search for property" />' +
        '<button><span>Search</span></button>' +
        '</div>' +
        '</div>';

    panelNode += '<div class="bpp-properties-tab-bar">';
    panelNode += '<ul class="bpp-properties-tabs-links"></ul></div>';
    panelNode += '<div class="bpp-properties-tabs-container"></div></div>';

    $("#js-properties-panel").empty().append(panelNode);

    for(var i = 0; i < tabs.length; i++) {

        if (!tabs[i].id) {
            throw new Error('tab must have an id');
        }

        var tabNode = '<div class="bpp-properties-tab" data-tab="' + tabs[i].id + '">';
        var tabLinkNode = "";

        if(i != 0)
            tabLinkNode = '<li onclick="changeTab(\'' + tabs[i].id + '\'); $(\'.bpp-properties-tab-link\').removeClass(\'bpp-properties-tabs-links-selected\'); $(this).addClass(\'bpp-properties-tabs-links-selected\')" class="bpp-properties-tab-link">' +
                    '<a>' + tabs[i].label + '</a>' +
                    '</li>';
        else
            tabLinkNode = '<li onclick="changeTab(\'' + tabs[i].id + '\'); $(\'.bpp-properties-tab-link\').removeClass(\'bpp-properties-tabs-links-selected\'); $(this).addClass(\'bpp-properties-tabs-links-selected\')" class="bpp-properties-tab-link bpp-properties-tabs-links-selected">' +
                '<a>' + tabs[i].label + '</a>' +
                '</li>';


        var groups = tabs[i].groups;

        for (var j = 0; j < groups.length; j++) {

            if (!groups[j].id) {
                throw new Error('group must have an id');
            }

            var groupNode;

            if(i == 0)
                groupNode = '<div class="bpp-properties-group" data-tab-id="' + tabs[i].id + '" data-group="' + groups[j].id + '">' +
                    '<span class="group-toggle"></span>' +
                    '<span class="group-label">' + groups[j].label + '</span>';
            else
                groupNode = '<div class="hidden bpp-properties-group" data-tab-id="' + tabs[i].id + '" data-group="' + groups[j].id + '">' +
                    '<span class="group-toggle"></span>' +
                    '<span class="group-label">' + groups[j].label + '</span>';

            // TODO(nre): use event delegation to handle that...
            //         groupNode.querySelector('.group-toggle').addEventListener('click', function(evt) {
            //             domClasses(groupNode).toggle('group-closed');
            //             evt.preventDefault();
            //             evt.stopPropagation();
            //         });
            //         groupNode.addEventListener('click', function(evt) {
            //             if (!evt.defaultPrevented && domClasses(groupNode).has('group-closed')) {
            //                 domClasses(groupNode).remove('group-closed');
            //             }
            //         });
            //
            for (var k = 0; k < groups[j].entries.length; k++) {

                var entry = groups[j].entries[k];

                if (!entry.id) {
                    throw new Error('entry must have an id');
                }

                var html = entry.html;

                if(entry.typeClass == "select")
                    inputs[counter++] = entry.id;

                var entryNode = '<div data-entry="' + entry.id + '" class="bpp-properties-entry ';

                for(var f = 0; f < entry.cssClasses.length || 0; f++) {
                    entryNode += entry.cssClasses[f] + " ";
                }

                entryNode += '" >' + html + '</div>';

                groupNode += entryNode;
                //
                //             // update conditionally visible elements
                //             self.updateState(entry, entryNode);
            }

            groupNode += "</div>";

            tabNode += groupNode;
        }

        tabNode += "</div>";

        $(".bpp-properties-tabs-container").append(tabNode);
        $('.bpp-properties-tabs-links').append(tabLinkNode);

    }

    return inputs;
}
