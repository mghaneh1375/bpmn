
export function textBox(options) {

    var resource = options,
        label = options.label || resource.id;
    //     // canBeShown = !!options.show && typeof options.show === 'function',
    //     // description = options.description;
    //

    resource.html =
        '<label for="' + resource.id + '" ' +
        // (canBeShown ? 'data-show="isShown"' : '') +
        '>' + label + '</label>' +
        '<div class="bpp-field-wrapper" ' +
        // (canBeShown ? 'data-show="isShown"' : '') +
        '>' +
        '<input class="defaultInput" type="text" id="' + resource.id + '" ' +
        'name="' + options.modelProperty + '" value="' + options.value + '">' +
        '</div>';

    // add description below text box entry field
    // if (description) {
    //     resource.html += entryFieldDescription(description);
    // }
    //
    // if (canBeShown) {
    //     resource.isShown = function() {
    //         return options.show.apply(resource, arguments);
    //     };
    // }

    resource.typeClass = "text";
    resource.cssClasses = ['bpp-textbox'];

    return resource;
};

export function file(options) {

    var resource = options,
        label = options.label || resource.id;

    resource.html =
        '<div class="bpp-field-wrapper">' +
        '<input name="' + options.modelProperty + '" id="' + resource.id + '" value="' + options.value + '" type="text" class="defaultInput hidden">' +
        '<button style="display: block !important; margin: 20px auto" class="btn btn-dafault" onclick="$(\'#upload\').css(\'display\', \'block\'); $(\'.dark\').removeClass(\'hidden\');" ' +
        '>پیوست</button>';


    var vals = options.value.split('$$');
    var fileName, tmp;
    resource.html += "<div id='uploaded_files'>";

    if(options.value.length > 0) {
        for (var i = 0; i < vals.length; i++) {

            fileName = "";
            tmp = vals[i].split('_');
            for(var j = 1; j < tmp.length - 1; j++)
                fileName += tmp[j] + '_';

            if(tmp.length > 1)
                fileName += tmp[tmp.length - 1];

            resource.html += "<div style='margin: 10px' id='file_" + tmp[0] + "'><a target='_blank' href='http://localhost/bp/downloadFile.php?file_id=" + tmp[0] + "' class='btn btn-default' download>دانلود فایل " + fileName  + "</a><p onclick='removeFile(" + tmp[0] + ", \"" + window.cli.elements()[0] + "\")' class='btn btn-danger' style='padding: 9px; display: inline-block'><span class='glyphicon glyphicon-remove'></span></p></div>";
        }
    }

    resource.html += '</div></div>';

    resource.typeClass = "text";
    resource.cssClasses = ['bpp-textbox'];

    return resource;
};

export function hiddenTagBox(options) {

    var resource = options,
        label = options.label || resource.id;

    resource.html =
        '<label for="' + resource.id + '" ' +
        '>' + label + '</label>' +
        '<div class="bpp-field-wrapper" ' +
        '>' +
        '<input class="hidden" type="text" id="' + resource.id + '" ' +
        'name="' + options.modelProperty + '" value="' + options.value + '">' +
        '<input id="tagTemp" type="text" placeholder="تگ جدید">' +
        '<span style="cursor: pointer" onclick="addNewTag()" class="glyphicon glyphicon-plus"></span>' +
        '<div id="tagsPane"></div>' +
        '</div>';

    resource.typeClass = "text";
    resource.cssClasses = ['bpp-textbox'];

    return resource;
};

export function textarea(options) {

    var resource = options,
        label = options.label || resource.id;
    //     // canBeShown = !!options.show && typeof options.show === 'function',
    //     // description = options.description;
    //
    resource.html =
        '<label for="' + resource.id + '" ' +
        // (canBeShown ? 'data-show="isShown"' : '') +
        '>' + label + '</label>' +
        '<div class="bpp-field-wrapper" ' +
        // (canBeShown ? 'data-show="isShown"' : '') +
        '>' +
        '<textarea class="defaultInput" style="width: 100%; height: 100px; overflow: auto; border: 2px solid; border-radius: 5px; padding: 5px;" id="' + resource.id + '" ' +
        'name="' + options.modelProperty + '" value="' + options.value + '">' + options.value + '</textarea>' +
        '</div>';

    resource.typeClass = "text";
    resource.cssClasses = ['bpp-textbox'];

    return resource;
};

export function textBox2(options) {

    var resource = options,
        label = options.label || resource.id;
        // canBeShown = !!options.show && typeof options.show === 'function',
        // description = options.description;

    resource.html =
        '<label for="' + resource.id + '" ' +
        // (canBeShown ? 'data-show="isShown"' : '') +
        '>' + label + '</label><button style="margin-right: 10px" class="btn btn-warning" onclick="showPopupSelect(\'' + resource.placeHolder + '\', \'' + resource.id + '\', \'' + options.label + '\')">' + 'انتخاب' + '</button>' +
        '<div class="bpp-field-wrapper row" ' +
        // (canBeShown ? 'data-show="isShown"' : '') +
        '>' +
        '<input class="hidden" data-val="' + options.value + '" id="' + resource.id + '" ' +
        'name="' + options.modelProperty + '" >' +
        '<input class="hidden" data-val="' + options.role_value + '" id="role_' + resource.id + '">' +
        '<div class="col-xs-12" style="width: 300px" id="itemBoxes_' + resource.id + '" />'
    '</div>';
    
    // add description below text box entry field
    // if (description) {
    //     resource.html += entryFieldDescription(description);
    // }

    // if (canBeShown) {
    //     resource.isShown = function() {
    //         return options.show.apply(resource, arguments);
    //     };
    // }

    resource.typeClass = "select";
    resource.cssClasses = ['bpp-textbox'];

    return resource;
};


export function textBoxWithOutCondition(options) {

    var resource = options,
        label = options.label || resource.id;
    // canBeShown = !!options.show && typeof options.show === 'function',
    // description = options.description;

    resource.html =
        '<label for="' + resource.id + '" ' +
        // (canBeShown ? 'data-show="isShown"' : '') +
        '>' + label + '</label><button style="margin-right: 10px" class="btn btn-warning" onclick="showPopupSelect2(\'' + resource.id + '\', \'' + options.label + '\', \'' + options.mode + '\')">' + 'انتخاب' + '</button>' +
        '<div class="bpp-field-wrapper row" ' +
        // (canBeShown ? 'data-show="isShown"' : '') +
        '>' +
        '<input class="hidden" data-val="' + options.role_value + '" id="' + resource.id + '"/>' +
        '<div class="col-xs-12" style="width: 300px" id="itemBoxes_' + resource.id + '" />' +
    '</div>';

    // add description below text box entry field
    // if (description) {
    //     resource.html += entryFieldDescription(description);
    // }

    // if (canBeShown) {
    //     resource.isShown = function() {
    //         return options.show.apply(resource, arguments);
    //     };
    // }

    resource.typeClass = "select";
    resource.cssClasses = ['bpp-textbox'];

    return resource;
};
